{"version":3,"sources":["components/Homepage/AppHeader.styled.js","components/Navigation.styled.js","components/Navigation.js","components/Homepage/Title.styled.js","components/Homepage/Title.js","misc/shoppingCart.context.js","components/Cart/Cart.styled.js","components/Cart/NumProductsAvatar.js","components/Cart/CartButton.js","components/Homepage/AppHeader.js","components/Homepage/Homepage.styled.js","styled.js","components/Homepage/Homepage.js","components/Category/CategoryCard.styled.js","components/Category/CategoryCard.js","components/Category/Categories.js","misc/useFilters.js","components/Products/Products.styled.js","components/Products/AddToCart.js","components/Products/ProductCard.js","components/Products/Products.js","components/Cart/ChangeProductQtyBtn.js","components/Cart/Checkout.styled.js","components/Cart/ShowProductInfo.js","components/Cart/Checkout.js","App.js","reportWebVitals.js","index.js"],"names":["HomeWrapper","styled","div","NavWrapper","ul","StyledNavLink","Link","Navigation","location","useLocation","to","linkName","map","ele","className","pathname","memo","TitleWrapper","Title","title","subtitle","shoppingCartReducer","prevState","action","type","filter","product","id","productInfo","length","price","qty","find","shoppingCartContext","createContext","ShoppingCartProvider","children","useReducer","initial","persistedValue","localStorage","getItem","JSON","parse","cartState","dispatch","useEffect","setItem","stringify","usePersistedReducer","Provider","value","useShoppingCart","useContext","CartWrapper","NumProductsAvatar","numProducts","Avatar","circle","size","style","background","color","marginLeft","CartButton","reduce","total","Button","Icon","icon","AppHeader","HomepageWrapper","StyledCarousel","Carousel","CardGrid","StyledDivider","Divider","CardWrapper","theme","mainColors","green","red","blue","black","media","Homepage","randomProducts","productsArray","i","x","Math","floor","random","includes","getRandomProducts","productsData","autoplay","src","thumbnail","alt","StyledLink","CategoryCard","name","description","Category","categoriesData","category","useFilters","initialFilterState","initialState","filtersReducer","filterState","filterAction","filterName","MainWrapper","FiltersWrapper","ProductsWrapper","AddToCart","inStock","addProduct","float","disabled","onClick","ProductCard","productId","productPrice","currency","delivery","categoryId","useCallback","Alert","info","Products","cid","useParams","filters","filterDispatch","filteredProducts","products","getFilteredProducts","data","newProducts","getInitialProducts","handleFilters","CheckboxGroup","Checkbox","onChange","textAlign","fontStyle","ChangeProductQtyBtn","productQty","addQty","reduceQty","reff","useRef","ref","padding","CheckoutTitle","TableWrapper","ShowProductInfo","table","addedProduct","height","width","Checkout","handleAddQty","handleReduceQty","fontSize","App","exact","path","component","Categories","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1373d4.chunk.js","sourcesContent":["// styleds for Homepage Component\r\nimport styled from 'styled-components';\r\n\r\nexport const HomeWrapper = styled.div`\r\n  display: flex;\r\n  background-color: black;\r\n  position: relative;\r\n  padding-bottom: 8px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavWrapper = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  margin-top: 15px;\r\n  //border-bottom: 0.5px solid lightgray;\r\n`;\r\n\r\nexport const StyledNavLink = styled(Link)`\r\n  font-size: calc(\r\n    10px + 1vw\r\n  ); // at least 10px + 1vw (min-size is 10px when screen size is minimized)\r\n  color: black;\r\n  margin: 0 15px 2px; // center-margin: spacing between each StyledNavLink, last-margin: similar to margin-bottom\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n    color: #2196f3;\r\n  }\r\n\r\n  &.active {\r\n    text-decoration: none;\r\n    color: #2196f3;\r\n  }\r\n`;\r\n","// React Component to Navigate to different pages of the App\r\nimport React, { memo } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { NavWrapper, StyledNavLink } from './Navigation.styled';\r\n\r\nconst Navigation = () => {\r\n  // get current page location\r\n  const location = useLocation();\r\n\r\n  // list of Nav links\r\n  const LINKS = [\r\n    { to: '/', linkName: 'Home' },\r\n    { to: '/categories', linkName: 'Categories' },\r\n    { to: '/products/allProducts', linkName: 'Products' },\r\n  ];\r\n\r\n  return (\r\n    <NavWrapper>\r\n      {LINKS.map(ele => (\r\n        <StyledNavLink\r\n          key={ele.to}\r\n          to={ele.to}\r\n          className={ele.to === location.pathname ? 'active' : ''}\r\n        >\r\n          {ele.linkName}\r\n        </StyledNavLink>\r\n      ))}\r\n    </NavWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(Navigation);\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleWrapper = styled.div`\r\n  width: 25%;\r\n  text-align: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 15px;\r\n\r\n  h1 {\r\n    color: whitesmoke;\r\n    font-size: calc(20px + 2vw); // min-size is 20px when screen size is reduced\r\n    font-family: 'Abril Fatface', cursive;\r\n    // font-family: 'Playfair Display SC', serif;\r\n    font-weight: 100;\r\n  }\r\n\r\n  h3 {\r\n    color: whitesmoke;\r\n  }\r\n`;\r\n","// React Component to display Title. Used in the Homepage Component\r\nimport React, { memo } from 'react';\r\nimport { TitleWrapper } from './Title.styled'; // custom-styled for the Title Component\r\n\r\nconst Title = ({ title, subtitle }) => {\r\n  return (\r\n    <TitleWrapper>\r\n      <h1>{title}</h1>\r\n      <h3>{subtitle}</h3>\r\n    </TitleWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(Title);\r\n","// Context for Shopping Cart\r\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\r\n\r\n// states of the Shopping-Cart would be handled using the useReducer() hook.\r\nfunction shoppingCartReducer(prevState, action) {\r\n  /* action is on object\r\n        eg.: action = {\r\n                  type: 'ADD',\r\n                  productInfo: '{id, price}'  (price only mentioned in case of adding product (ADD_PRODUCT))\r\n                }\r\n  */\r\n  switch (action.type) {\r\n    case 'ADD_PRODUCT': {\r\n      // check if product already exists in Cart\r\n      const inCart = prevState.filter(\r\n        product => product.id === action.productInfo.id\r\n      );\r\n\r\n      // if product is not in Cart (ie. inCart.length === 0), return previous state along with new product info\r\n      // else, increment product quantity and return the update state\r\n      return inCart.length === 0\r\n        ? [\r\n            ...prevState,\r\n            {\r\n              id: action.productInfo.id,\r\n              price: action.productInfo.price,\r\n              qty: 1,\r\n            },\r\n          ]\r\n        : prevState.map(product =>\r\n            product.id === action.productInfo.id\r\n              ? { ...product, qty: product.qty + 1 }\r\n              : product\r\n          );\r\n    }\r\n    case 'REMOVE_PRODUCT': {\r\n      // return array with all products except the removed one.\r\n      return prevState.filter(product => product.id !== action.productInfo.id);\r\n    }\r\n    case 'ADD_QTY': {\r\n      // increment product quantity by 1\r\n      return prevState.map(product =>\r\n        product.id === action.productInfo.id\r\n          ? { ...product, qty: product.qty + 1 }\r\n          : product\r\n      );\r\n    }\r\n    case 'REDUCE_QTY': {\r\n      // get product whose quantity has to be reduced\r\n      const productInCart = prevState.find(\r\n        product => product.id === action.productInfo.id\r\n      );\r\n\r\n      // if the quantity of this product is already 0, delete it from the cart\r\n      if (productInCart.qty === 1) {\r\n        return prevState.filter(\r\n          product => product.id !== action.productInfo.id\r\n        );\r\n      }\r\n\r\n      // else, decrement product quantity by 1 (when qty >= 1)\r\n      return prevState.map(product =>\r\n        product.id === action.productInfo.id\r\n          ? { ...product, qty: product.qty - 1 }\r\n          : product\r\n      );\r\n    }\r\n    case 'RESET_CART': {\r\n      // return empty array\r\n      return [];\r\n    }\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n\r\n// creating Context object\r\nconst shoppingCartContext = createContext();\r\n\r\n/*\r\n    SHOPPING-CART CONTEXT\r\n    - This Context will provide access to the Shopping Cart to all the enclosing Components.\r\n    - It has a Context Provider which fulfills this purpose. \r\n    - The Components enclosed by <Provider /> will have access to the Context values.\r\n    - The enclosed Components can access the Context values using the useContext() hook.\r\n*/\r\n\r\n/* custom-hook built around the useReducer() hook.\r\n   - Serves the same purpose as useReducer to manage state of the Shopping-Cart.\r\n   - Additionally, saves the most recent state of the Shopping-Cart to the browser's localStorage.\r\n*/\r\nfunction usePersistedReducer() {\r\n  // using useReducer() to access Cart state\r\n  // the \"[]\" in the function argument is the initialState.\r\n  /* the initialState would be replaced by the third argument, \r\n       which is a function defining the initial state. \r\n    */\r\n  const [cartState, dispatch] = useReducer(shoppingCartReducer, [], initial => {\r\n    // access the shoppingCart value (if any) stored in the browser's localStorage\r\n    const persistedValue = localStorage.getItem('shoppingCart');\r\n\r\n    /* return value of shoppingCart stored in the browser's localStorage \r\n           (i.e. if the user already has products in the shopping cart) \r\n            else, return the initial state.\r\n        */\r\n    return persistedValue ? JSON.parse(persistedValue) : initial;\r\n  });\r\n\r\n  /* \r\n    whenever the state of the Shopping-Cart (i.e. cartState) changes,\r\n    update its state in the browser's localStorage as well.\r\n    Shopping-Cart info is stored in browser's localStorage so that they don't \r\n    get erased if the app is closed.\r\n  */\r\n  useEffect(() => {\r\n    // store the value of Shopping-Cart in the localStorage\r\n    localStorage.setItem('shoppingCart', JSON.stringify(cartState));\r\n  }, [cartState]);\r\n\r\n  // return cartState and dispatch\r\n  return [cartState, dispatch];\r\n}\r\n\r\n// exporting the Provider function, which will be wrapped around Components\r\n// to provide them access to Context values.\r\nexport const ShoppingCartProvider = ({ children }) => {\r\n  // call custom-hook usePersistedReducer()\r\n  const [cartState, dispatch] = usePersistedReducer();\r\n\r\n  return (\r\n    <shoppingCartContext.Provider value={{ cartState, dispatch }}>\r\n      {children}\r\n    </shoppingCartContext.Provider>\r\n  );\r\n};\r\n\r\n// custom-hook to use the Shopping-Cart Context\r\nexport const useShoppingCart = () => useContext(shoppingCartContext);\r\n","// styles for Cart\r\nimport styled from 'styled-components';\r\n\r\nexport const CartWrapper = styled.div`\r\n  float: right;\r\n  height: 50%;\r\n  margin-top: 10px;\r\n  margin-bottom: auto;\r\n  margin-right: 15px;\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\n","// React Component next to the Cart Button, showing number of Products in Cart.\r\nimport React from 'react';\r\nimport { Avatar } from 'rsuite';\r\n\r\nconst NumProductsAvatar = ({ numProducts }) => {\r\n  return (\r\n    <>\r\n      <Avatar\r\n        circle\r\n        size=\"sm\"\r\n        style={{\r\n          background: 'grey',\r\n          color: '#f5f5f5',\r\n          marginLeft: '12px',\r\n        }}\r\n      >\r\n        {numProducts}\r\n      </Avatar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NumProductsAvatar;\r\n","// React Component for Cart\r\nimport React from 'react';\r\nimport { Icon, Button } from 'rsuite';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useShoppingCart } from '../../misc/shoppingCart.context';\r\nimport { CartWrapper } from './Cart.styled';\r\n\r\nimport NumProductsAvatar from './NumProductsAvatar';\r\n\r\nconst CartButton = () => {\r\n  // use Shopping-Cart Context to get Shopping Cart state\r\n  const { cartState } = useShoppingCart();\r\n\r\n  // calculating total number of products\r\n  const numProducts = cartState.reduce(\r\n    (total, product) => total + product.qty,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <CartWrapper>\r\n      <Link to=\"/checkout\">\r\n        <Button>\r\n          <Icon icon=\"shopping-basket\" size=\"lg\" />\r\n          <NumProductsAvatar numProducts={numProducts} />\r\n        </Button>\r\n      </Link>\r\n    </CartWrapper>\r\n  );\r\n};\r\n\r\nexport default CartButton;\r\n","// React Component for App Header\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { HomeWrapper } from './AppHeader.styled';\r\nimport Navigation from '../Navigation';\r\nimport Title from './Title';\r\nimport CartButton from '../Cart/CartButton';\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <>\r\n      <HomeWrapper>\r\n        <Title title=\"Shopping Cart\" subtitle=\"\" />\r\n        <CartButton />\r\n      </HomeWrapper>\r\n      <Navigation />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","// Styled Components for Homepage\r\nimport styled from 'styled-components';\r\nimport { Carousel } from 'rsuite';\r\n\r\nexport const HomepageWrapper = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  .homepageTitleDiv {\r\n    color: black;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n\r\n    h1 {\r\n      font-weight: 100;\r\n      font-size: 3vw;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledCarousel = styled(Carousel)`\r\n  background-color: whitesmoke;\r\n  height: 28vw;\r\n  width: 50vw;\r\n  border-radius: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 70px;\r\n`;\r\n","// re-usable styles for Components\r\nimport styled from 'styled-components';\r\nimport { Button, Divider } from 'rsuite';\r\nimport media from 'css-in-js-media'; // for responsive design for Styled Components\r\n\r\nexport const CardGrid = styled.div`\r\n  text-align: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledDivider = styled(Divider)`\r\n  width: 50%;\r\n  background-color: lightgrey;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const CardWrapper = styled.div`\r\n  background-color: whitesmoke;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 50%;\r\n  margin-bottom: 20px;\r\n  padding: 50px;\r\n  border: 1pt grey;\r\n  box-shadow: 1px 2px 6px lightgrey;\r\n\r\n  :hover {\r\n    box-shadow: 1px 2px 5px grey;\r\n  }\r\n\r\n  // class for Product Cards\r\n  &.product-card {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    height: calc(250px + 18vw);\r\n    width: calc(250px + 20vw);\r\n\r\n    .text-container {\r\n      height: fit-content;\r\n      width: fit-content;\r\n      h3 {\r\n        font-size: calc(15px + 1vw);\r\n        color: black;\r\n      }\r\n\r\n      p {\r\n        font-size: calc(5px + 1vw);\r\n      }\r\n    }\r\n\r\n    .text-green {\r\n      font-weight: 500;\r\n      color: ${({ theme }) => theme.mainColors.green};\r\n    }\r\n\r\n    .text-red {\r\n      font-weight: 600;\r\n      font-style: italic;\r\n      color: ${({ theme }) => theme.mainColors.red};\r\n    }\r\n\r\n    .text-blue {\r\n      font-weight: 500;\r\n      color: ${({ theme }) => theme.mainColors.blue};\r\n    }\r\n\r\n    .text-black {\r\n      font-weight: 600;\r\n      font-style: italic;\r\n      color: ${({ theme }) => theme.mainColors.black};\r\n    }\r\n  }\r\n\r\n  .img-wrapper {\r\n    width: 80%;\r\n    margin-bottom: 15px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    img {\r\n      height: 15vw;\r\n      width: 100%;\r\n    }\r\n\r\n    ${media('<=desktop', '>tablet')} {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  // media queries for responsive design for Styled-Components\r\n  ${media('>desktop')} {\r\n    width: 50%;\r\n  }\r\n  ${media('<=desktop', '>tablet')} {\r\n    width: 80%;\r\n  }\r\n  ${media('<=tablet', '>phone')} {\r\n    width: 80%;\r\n  }\r\n  ${media('<=phone')} {\r\n    width: 80%;\r\n  }\r\n`;\r\n","// React Component for Homepage which shows Featured Products\r\nimport React from 'react';\r\n\r\nimport { HomepageWrapper, StyledCarousel } from './Homepage.styled';\r\nimport { StyledDivider } from '../../styled';\r\n\r\nimport productsData from '../../Databases/products.json';\r\n\r\n// function to get an array of random Products to display in the Carousel\r\nfunction getRandomProducts(productsArray) {\r\n  const randomProducts = [-1, -1, -1, -1, -1];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    // generate random index\r\n    let x = Math.floor(Math.random() * productsArray.length);\r\n\r\n    // generate another random index if object at this index is\r\n    // already there in randomProducts array\r\n    while (randomProducts.includes(productsArray[x])) {\r\n      x = Math.floor(Math.random() * productsArray.length);\r\n    }\r\n\r\n    randomProducts[i] = productsArray[x];\r\n  }\r\n\r\n  return randomProducts;\r\n}\r\n\r\nconst Homepage = () => {\r\n  // getting random products from the productsData array (to display in the Carousel)\r\n  const randomProducts = getRandomProducts(productsData); // user-defined function\r\n\r\n  return (\r\n    <HomepageWrapper>\r\n      <StyledDivider />\r\n\r\n      <div className=\"homepageTitleDiv\">\r\n        <h1 className=\"maintTitle\">\r\n          Just when you thought things couldn&apos;t get better\r\n        </h1>\r\n        <h4>...you end up here</h4>\r\n      </div>\r\n\r\n      <StyledCarousel autoplay>\r\n        {randomProducts.map(product => (\r\n          <img key={product.id} src={product.thumbnail} alt=\"\" />\r\n        ))}\r\n      </StyledCarousel>\r\n    </HomepageWrapper>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","// styles for the CategoryGrid Component\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color: darkslategrey;\r\n  text-decoration: none;\r\n\r\n  h3 {\r\n    font-size: 25px;\r\n  }\r\n\r\n  h5 {\r\n    font-size: 15px;\r\n    font-style: italic;\r\n  }\r\n\r\n  :hover {\r\n    color: black;\r\n    text-decoration: none;\r\n    box-shadow: 1px 2px 5px black;\r\n  }\r\n`;\r\n","// React Component to display Category Cards in the Category Component\r\nimport React from 'react';\r\nimport { CardWrapper } from '../../styled';\r\nimport { StyledLink } from './CategoryCard.styled';\r\n\r\nconst CategoryCard = ({ id, name, description }) => {\r\n  return (\r\n    <CardWrapper>\r\n      <StyledLink to={`/products/${id}`}>\r\n        <h3>{name}</h3>\r\n        <h5>{description}</h5>\r\n      </StyledLink>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;\r\n","// React Component for list of Categories\r\n\r\nimport React from 'react';\r\n\r\nimport CategoryCard from './CategoryCard';\r\nimport categoriesData from '../../Databases/categories.json'; // get JSON database containing Categories info\r\nimport { CardGrid, StyledDivider } from '../../styled';\r\n\r\n// console.log(categoriesData);\r\n\r\nconst Category = () => {\r\n  return (\r\n    <CardGrid>\r\n      <StyledDivider />\r\n      {categoriesData.map(category => (\r\n        <CategoryCard\r\n          key={category.id}\r\n          id={category.id}\r\n          name={category.name}\r\n          description={category.description}\r\n        />\r\n      ))}\r\n    </CardGrid>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","// custom-hook built around the useReducer() hook to apply filters to Products\r\n\r\nimport { useReducer } from 'react';\r\n\r\n/*\r\n  creating a function which returns the reducer function for filter states.\r\n*/\r\nfunction createFiltersReducer(initialState) {\r\n  // return reducer function for filters\r\n  // reducer function for the custom-hook useFilters()\r\n  // productsState consists of products currently shown on the Products page\r\n  // applying filters would affect the state of products\r\n  return function filtersReducer(filterState, action) {\r\n    /*  structure of \"action\":\r\n         eg: action = {\r\n                filterAction: \"SET\",\r\n                filterName:  \"BELOW_$50\",\r\n            }\r\n        (would require nested-switches)\r\n    */\r\n\r\n    switch (action.filterAction) {\r\n      case 'SET': {\r\n        // check if filter is already applied\r\n        const isFilterApplied = filterState.includes(action.filterName);\r\n\r\n        // remove the filter from array of filters if it's already applied, or add it to the array of the filters\r\n        return isFilterApplied\r\n          ? filterState.filter(filterName => filterName !== action.filterName)\r\n          : [...filterState, action.filterName];\r\n      }\r\n\r\n      case 'RESET':\r\n        return initialState;\r\n\r\n      default:\r\n        return filterState;\r\n    }\r\n  };\r\n}\r\n\r\n// custom-hook built around the useReducer() hook to manage filters\r\nexport const useFilters = initialFilterState => {\r\n  // calling createFiltersReducer which returns a filters reducer function\r\n  const filtersReducer = createFiltersReducer(initialFilterState);\r\n\r\n  return useReducer(filtersReducer, initialFilterState);\r\n};\r\n","// Styled Components for Products page\r\nimport styled from 'styled-components';\r\nimport media from 'css-in-js-media';\r\n\r\nexport const MainWrapper = styled.div`\r\n  position: relative;\r\n\r\n  ${media('<=desktop', '>tablet')} {\r\n    width: 20%;\r\n  }\r\n  ${media('<=tablet', '>phone')} {\r\n    width: 50%;\r\n  }\r\n  ${media('<=phone')} {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const FiltersWrapper = styled.div`\r\n  background-color: whitesmoke;\r\n  border: 1pt solid lightgrey;\r\n  border-radius: 5px;\r\n  width: 15%;\r\n  margin-left: 40px;\r\n  margin-right: auto;\r\n  padding: 15px;\r\n  position: fixed;\r\n\r\n  ${media('<=desktop', '>tablet')} {\r\n    width: 20%;\r\n  }\r\n  ${media('<=tablet', '>phone')} {\r\n    margin-left: auto;\r\n    margin-right: 0;\r\n    width: 30%;\r\n  }\r\n  ${media('<=phone')} {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nexport const ProductsWrapper = styled.div`\r\n  width: 70%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  //border: 1pt solid black;\r\n\r\n  ${media('<=desktop', '>tablet')} {\r\n    margin-right: 0;\r\n  }\r\n  ${media('<=tablet', '>phone')} {\r\n    margin-right: 0;\r\n  }\r\n  ${media('<=phone')} {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","// React Component for \"Add to Cart\" Button\r\nimport React from 'react';\r\nimport { Button, Icon } from 'rsuite';\r\n\r\nconst AddToCart = ({ inStock, addProduct }) => {\r\n  return (\r\n    <div style={{ float: 'right' }}>\r\n      <Button size=\"md\" color=\"blue\" disabled={!inStock} onClick={addProduct}>\r\n        <Icon icon=\"shopping-cart\" /> Add to Cart\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToCart;\r\n","// React Component for Product Card, used in the Products Component\r\nimport React, { useCallback } from 'react';\r\nimport { Alert } from 'rsuite';\r\nimport { CardWrapper } from '../../styled';\r\nimport { useShoppingCart } from '../../misc/shoppingCart.context';\r\n\r\nimport AddToCart from './AddToCart';\r\n\r\nconst ProductCard = ({\r\n  productId,\r\n  name,\r\n  productPrice,\r\n  currency,\r\n  delivery,\r\n  inStock,\r\n  thumbnail,\r\n  categoryId,\r\n}) => {\r\n  // use Shopping-Cart Context\r\n  const { cartState, dispatch } = useShoppingCart();\r\n\r\n  // function to add Product to Cart. Sent as a Prop to the AddToCart Component.\r\n  const addProduct = useCallback(() => {\r\n    dispatch({\r\n      type: 'ADD_PRODUCT',\r\n      productInfo: { id: productId, price: productPrice },\r\n    });\r\n\r\n    Alert.info('Product added to cart', 4000);\r\n  }, [dispatch, productId, productPrice]);\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper className=\"product-card\">\r\n        <div className=\"img-wrapper\">\r\n          <img src={thumbnail} alt=\"product img\" />\r\n        </div>\r\n        <div className=\"text-container\">\r\n          <h3>{name}</h3>\r\n          <h4>{`${currency} ${productPrice}.00`}</h4>\r\n          <p className={delivery ? 'text-blue' : 'text-black'}>\r\n            {delivery ? 'Delivery available' : 'Delivery unavailable'}\r\n          </p>\r\n          <p className={inStock ? 'text-green' : 'text-red'}>\r\n            {inStock ? 'In stock' : 'Out of stock'}\r\n          </p>\r\n        </div>\r\n        <AddToCart inStock={inStock} addProduct={addProduct} />\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","// React Component that lists products from all Categories (by default)\r\n// This Component also allows users to use filters for their search\r\n\r\nimport React from 'react';\r\nimport { Button, Checkbox, CheckboxGroup } from 'rsuite';\r\nimport { useParams } from 'react-router';\r\nimport { useFilters } from '../../misc/useFilters';\r\n\r\nimport { StyledDivider } from '../../styled';\r\nimport {\r\n  MainWrapper,\r\n  FiltersWrapper,\r\n  ProductsWrapper,\r\n} from './Products.styled';\r\nimport ProductCard from './ProductCard';\r\n\r\nimport productsData from '../../Databases/products.json'; // hard-coded JSON Products database\r\n\r\n/* \r\n     If the user navigates to the Products page through the Categories page (by clicking on a Category), \r\n     show Products only from the Category that was clicked on.\r\n     Show all Products if the user directly navigates to the Products page.\r\n*/\r\nfunction getInitialProducts(data, cid) {\r\n  let newProducts = data;\r\n  if (cid !== 'allProducts') {\r\n    newProducts = data.filter(product => product.categoryId === cid);\r\n  }\r\n  return newProducts;\r\n}\r\n\r\n// function to get filteredProducts\r\n// \"filters\" sent as an argument keeps track of filters states\r\nfunction getFilteredProducts(products, filters) {\r\n  // get all products\r\n  let filteredProducts = [...products];\r\n\r\n  if (filters.includes('IN_STOCK_ONLY')) {\r\n    filteredProducts = filteredProducts.filter(product => product.inStock);\r\n  }\r\n\r\n  if (filters.includes('BELOW_$50')) {\r\n    filteredProducts = filteredProducts.filter(product => product.price < 50);\r\n  }\r\n\r\n  if (filters.includes('$50_$100')) {\r\n    filteredProducts = filteredProducts.filter(\r\n      product => product.price >= 50 && product.price <= 100\r\n    );\r\n  }\r\n\r\n  if (filters.includes('ABOVE_$100')) {\r\n    filteredProducts = filteredProducts.filter(product => product.price > 100);\r\n  }\r\n\r\n  return filteredProducts;\r\n}\r\n\r\nconst Products = () => {\r\n  // getting categoryId from the page URL\r\n  const { cid } = useParams();\r\n\r\n  // state for filters using custom-hook\r\n  const [filters, filterDispatch] = useFilters([]);\r\n\r\n  const allProducts = getInitialProducts(productsData, cid);\r\n\r\n  // get filtered products\r\n  const filteredProducts = getFilteredProducts(allProducts, filters);\r\n\r\n  // function to handle \"Availability\" filter\r\n  const handleFilters = value => {\r\n    // calling dispatch for filters\r\n    // \"filters[value]\" is true/false depending on current state of the filter.\r\n    // \"value\" comes from the name of the Checkbox\r\n    filterDispatch({\r\n      filterAction: 'SET',\r\n      filterName: value,\r\n    });\r\n\r\n    // eslint-disable-next-line no-console\r\n    // console.log(filters);    // DEBUG\r\n  };\r\n\r\n  // function to reset filters\r\n  const handleResetFilters = () => {\r\n    filterDispatch({ filterAction: 'RESET' });\r\n\r\n    // eslint-disable-next-line no-console\r\n    // console.log(filters);   // DEBUG\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledDivider />\r\n      <MainWrapper>\r\n        <FiltersWrapper>\r\n          <h4>Filters</h4>\r\n          <CheckboxGroup value={filters}>\r\n            <Checkbox value=\"IN_STOCK_ONLY\" onChange={handleFilters}>\r\n              In stock only\r\n            </Checkbox>\r\n            <Checkbox value=\"BELOW_$50\" onChange={handleFilters}>\r\n              Below $50\r\n            </Checkbox>\r\n            <Checkbox value=\"$50_$100\" onChange={handleFilters}>\r\n              $50 - $100\r\n            </Checkbox>\r\n            <Checkbox value=\"ABOVE_$100\" onChange={handleFilters}>\r\n              Above $100\r\n            </Checkbox>\r\n          </CheckboxGroup>\r\n\r\n          <Button color=\"cyan\" size=\"sm\" onClick={handleResetFilters}>\r\n            Reset\r\n          </Button>\r\n        </FiltersWrapper>\r\n        {filteredProducts.length < 1 && (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <h4\r\n              style={{\r\n                fontStyle: 'italic',\r\n              }}\r\n            >\r\n              No products found.\r\n            </h4>\r\n          </div>\r\n        )}\r\n        <ProductsWrapper>\r\n          {filteredProducts.map(product => (\r\n            <ProductCard\r\n              key={product.id}\r\n              productId={product.id}\r\n              name={product.name}\r\n              productPrice={product.price}\r\n              currency={product.currency}\r\n              delivery={product.delivery}\r\n              inStock={product.inStock}\r\n              thumbnail={product.thumbnail}\r\n              categoryId={product.categoryId}\r\n            />\r\n          ))}\r\n        </ProductsWrapper>\r\n      </MainWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","// React Component displaying products in Cart; used in the Checkout Component\r\nimport React, { useRef } from 'react';\r\nimport { Button, Icon } from 'rsuite';\r\n\r\nconst ChangeProductQtyBtn = ({ id, productQty, addQty, reduceQty }) => {\r\n  const reff = useRef();\r\n\r\n  return (\r\n    <>\r\n      <Button size=\"xs\" onClick={() => reduceQty(id)}>\r\n        <Icon icon=\"minus\" />\r\n      </Button>\r\n      <span ref={reff} style={{ padding: '10px' }}>\r\n        {productQty}\r\n      </span>\r\n      <Button size=\"xs\" onClick={() => addQty(id)}>\r\n        <Icon icon=\"plus\" />\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeProductQtyBtn;\r\n","// styles for Checkout page\r\nimport styled from 'styled-components';\r\nimport media from 'css-in-js-media';\r\nimport { CardWrapper } from '../../styled';\r\n\r\nexport const CheckoutTitle = styled.div`\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 70%;\r\n  margin-bottom: 15px;\r\n  text-align: normal;\r\n  h3 {\r\n    color: slategrey;\r\n  }\r\n\r\n  Button {\r\n    float: right;\r\n  }\r\n`;\r\n\r\nexport const TableWrapper = styled(CardWrapper)`\r\n  table-layout: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  align-content: center;\r\n  width: 70%;\r\n\r\n  table {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    padding: 5px;\r\n\r\n    thead {\r\n      font-size: calc(10px + 1vw);\r\n      border-bottom: 1pt solid black;\r\n    }\r\n\r\n    th {\r\n      padding-bottom: 3px;\r\n    }\r\n\r\n    tbody > tr {\r\n      border-bottom: 0.5pt solid lightgrey;\r\n    }\r\n\r\n    tr {\r\n      font-size: calc(5px + 1vw);\r\n    }\r\n\r\n    td {\r\n      text-align: center;\r\n      //white-space: nowrap;\r\n      padding: 15px;\r\n    }\r\n\r\n    tfoot {\r\n      td {\r\n        font-size: calc(10px + 2vw);\r\n      }\r\n    }\r\n\r\n    ${media('<=desktop', '>tablet')} {\r\n      width: 100%;\r\n\r\n      td {\r\n        padding: 5px;\r\n      }\r\n    }\r\n    ${media('<=tablet', '>phone')} {\r\n      width: 90%;\r\n\r\n      td {\r\n        padding: 5px;\r\n      }\r\n    }\r\n    ${media('<=phone')} {\r\n      width: 80%;\r\n\r\n      td {\r\n        padding: 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledTable = styled.table``;\r\n\r\nexport const StyledTHead = styled.table``;\r\n","// Component to show Product Info in Checkout Page\r\nimport React from 'react';\r\n\r\nimport productsData from '../../Databases/products.json'; // hard-coded JSON Products database\r\n\r\nconst ShowProductInfo = ({ id, productPrice }) => {\r\n  // extracting Product info from database\r\n  // compare all the Products in the database with the Product info sent to this Component\r\n  /*  DIFFERENCE BETWEEN Array.find() and Array.filter:\r\n      - Array.find() returns the first element in the array that satisfies the condition.\r\n      - Array.filter() returns an array of elements satisfying the condition.\r\n  */\r\n  const addedProduct = productsData.find(product => product.id === id);\r\n  // console.log(addedProduct.name);\r\n\r\n  return (\r\n    <>\r\n      <td>\r\n        <img\r\n          src={addedProduct.thumbnail}\r\n          alt=\"img\"\r\n          style={{ height: '3vw', width: '4vw' }}\r\n        />\r\n      </td>\r\n      <td>{addedProduct.name}</td>\r\n      <td>{`${addedProduct.currency} ${productPrice}.00`}</td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowProductInfo;\r\n","// React Component for the Checkout page\r\nimport React, { useCallback } from 'react';\r\nimport { Alert, Button, Icon } from 'rsuite';\r\n\r\nimport { useShoppingCart } from '../../misc/shoppingCart.context';\r\n\r\nimport ChangeProductQtyBtn from './ChangeProductQtyBtn';\r\nimport { StyledDivider } from '../../styled';\r\nimport { CheckoutTitle, TableWrapper } from './Checkout.styled';\r\nimport ShowProductInfo from './ShowProductInfo';\r\n\r\nconst Checkout = () => {\r\n  // call shoppingCart Context\r\n  const { cartState, dispatch } = useShoppingCart();\r\n\r\n  // function to add product quantity\r\n  const handleAddQty = useCallback(\r\n    productId => {\r\n      dispatch({\r\n        type: 'ADD_QTY',\r\n        productInfo: {\r\n          id: productId,\r\n        },\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // function to reduce product quantity\r\n  const handleReduceQty = useCallback(\r\n    productId => {\r\n      dispatch({\r\n        type: 'REDUCE_QTY',\r\n        productInfo: {\r\n          id: productId,\r\n        },\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // function to remove Product\r\n  const removeProduct = productId => {\r\n    dispatch({\r\n      type: 'REMOVE_PRODUCT',\r\n      productInfo: {\r\n        id: productId,\r\n      },\r\n    });\r\n\r\n    Alert.info('Removed product from cart', 4000);\r\n  };\r\n\r\n  // function to calculate total price of Products\r\n  const calcTotalPrice = () => {\r\n    return cartState.reduce(\r\n      (total, product) => total + product.price * product.qty,\r\n      0\r\n    );\r\n  };\r\n\r\n  // function to reset Cart\r\n  const resetCart = () => {\r\n    dispatch({ type: 'RESET_CART' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledDivider />\r\n      <CheckoutTitle>\r\n        <h3>Checkout</h3>\r\n        <div style={{ float: 'right', marginLeft: 'auto' }}>\r\n          <Button color=\"cyan\" onClick={resetCart}>\r\n            <Icon icon=\"cart-arrow-down\" /> Reset\r\n          </Button>\r\n        </div>\r\n      </CheckoutTitle>\r\n      {cartState.length < 1 && (\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h4>You have no items in the cart yet.</h4>\r\n        </div>\r\n      )}\r\n      {cartState.length > 0 && (\r\n        <TableWrapper>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>{}</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>{}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {cartState.map(product => (\r\n                <tr key={product.id}>\r\n                  <ShowProductInfo\r\n                    id={product.id}\r\n                    productPrice={product.price}\r\n                  />\r\n                  <td>\r\n                    <ChangeProductQtyBtn\r\n                      id={product.id}\r\n                      productQty={product.qty}\r\n                      addQty={handleAddQty}\r\n                      reduceQty={handleReduceQty}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <Button onClick={() => removeProduct(product.id)}>\r\n                      <Icon icon=\"close-circle\" />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n\r\n            <tfoot>\r\n              <tr>\r\n                <td>\r\n                  <h5\r\n                    style={{ fontSize: 'calc(8px + 1vw)' }}\r\n                  >{`Total: USD ${calcTotalPrice()}.00`}</h5>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </TableWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from 'react';\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\n\nimport AppHeader from './components/Homepage/AppHeader';\nimport Homepage from './components/Homepage/Homepage';\nimport Categories from './components/Category/Categories';\nimport Products from './components/Products/Products';\nimport Checkout from './components/Cart/Checkout';\nimport { ShoppingCartProvider } from './misc/shoppingCart.context';\n\n// propsn to be sent to ThemeProvider\nconst theme = {\n  mainColors: {\n    blue: '#2196f3',\n    red: '#ff0000',\n    green: '#32cd32',\n    black: '#000000',\n  },\n};\n\nfunction App() {\n  return (\n    <ShoppingCartProvider>\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <AppHeader />\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n\n            <Route exact path=\"/categories\" component={Categories} />\n\n            <Route exact path=\"/products/:cid\" component={Products} />\n\n            <Route exact path=\"/checkout\" component={Checkout} />\n          </Switch>\n        </HashRouter>\n      </ThemeProvider>\n    </ShoppingCartProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}